//
// Generated file, do not edit! Created by opp_msgtool 6.0 from ProgressInfo.msg.
//

#ifndef __PHY_PROGRESSINFO_M_H
#define __PHY_PROGRESSINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace phy {

class ProgressInfo;

}  // namespace phy


namespace phy {

/**
 * Class generated from <tt>ProgressInfo.msg:19</tt> by opp_msgtool.
 * <pre>
 * class ProgressInfo extends cObject
 * {
 *     int availableBitLength;
 *     bool isEnd;
 * }
 * </pre>
 */
class ProgressInfo : public ::omnetpp::cObject
{
  protected:
    int availableBitLength = 0;
    bool isEnd_ = false;

  private:
    void copy(const ProgressInfo& other);

  protected:
    bool operator==(const ProgressInfo&) = delete;

  public:
    ProgressInfo();
    ProgressInfo(const ProgressInfo& other);
    virtual ~ProgressInfo();
    ProgressInfo& operator=(const ProgressInfo& other);
    virtual ProgressInfo *dup() const override {return new ProgressInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getAvailableBitLength() const;
    virtual void setAvailableBitLength(int availableBitLength);

    virtual bool isEnd() const;
    virtual void setIsEnd(bool isEnd);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ProgressInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ProgressInfo& obj) {obj.parsimUnpack(b);}


}  // namespace phy


namespace omnetpp {

template<> inline phy::ProgressInfo *fromAnyPtr(any_ptr ptr) { return check_and_cast<phy::ProgressInfo*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PHY_PROGRESSINFO_M_H

