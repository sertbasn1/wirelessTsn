//
// Generated file, do not edit! Created by opp_msgtool 6.0 from HCPacket.msg.
//

#ifndef __HCPACKET_M_H
#define __HCPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class HCPacket;
/**
 * Class generated from <tt>HCPacket.msg:15</tt> by opp_msgtool.
 * <pre>
 * //
 * // Represents a packet in the network.
 * //
 * packet HCPacket
 * {
 *     int srcAddress;
 *     int destAddress;
 *     int hops = 0;
 * }
 * </pre>
 */
class HCPacket : public ::omnetpp::cPacket
{
  protected:
    int srcAddress = 0;
    int destAddress = 0;
    int hops = 0;

  private:
    void copy(const HCPacket& other);

  protected:
    bool operator==(const HCPacket&) = delete;

  public:
    HCPacket(const char *name=nullptr, short kind=0);
    HCPacket(const HCPacket& other);
    virtual ~HCPacket();
    HCPacket& operator=(const HCPacket& other);
    virtual HCPacket *dup() const override {return new HCPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrcAddress() const;
    virtual void setSrcAddress(int srcAddress);

    virtual int getDestAddress() const;
    virtual void setDestAddress(int destAddress);

    virtual int getHops() const;
    virtual void setHops(int hops);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const HCPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, HCPacket& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline HCPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<HCPacket*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __HCPACKET_M_H

