/*
 * SimpleUdpSourceApp.cc
 *
 *  Created on: Apr 22, 2025
 *      Author: root
 */


#include "inet/applications/udpapp/SimpleUdpSourceApp.h"

#include "inet/common/ModuleAccess.h"
#include "inet/common/packet/Packet.h"
#include "inet/networklayer/common/L3AddressResolver.h"
#include "inet/transportlayer/contract/udp/UdpControlInfo_m.h"

#define MSGKIND_SEND_TA                 9
namespace inet {

using namespace std;
//Define_Module(SimpleUdpSourceApp);

SimpleUdpSourceApp::~SimpleUdpSourceApp()
{

}


void SimpleUdpSourceApp::initialize(int stage)
{
    ApplicationBase::initialize(stage);

    cMessage *event = new cMessage("TA msg");
    event->setKind(MSGKIND_SEND_TA);
    double start=this->par( "initialProductionOffset" );
    scheduleAt(start, event);
}


void SimpleUdpSourceApp::handleMessageWhenUp(cMessage *msg)
{
    if (msg->isSelfMessage()) {
        ASSERT(msg == selfMsg);
        switch (selfMsg->getKind()) {
            case START:
                processStart();
                break;

            case STOP:
                processStop();
                break;

            default:
                throw cRuntimeError("Invalid kind %d in self message", (int)selfMsg->getKind());
        }
    }
    else if (msg->arrivedOn("socketIn"))
        socket.processMessage(msg);
    else
        throw cRuntimeError("Unknown incoming gate: '%s'", msg->getArrivalGate()->getFullName());
}
} // namespace inet





