//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

package inet.configurator;
import inet.node.ethernet.EthernetLink;
import inet.node.tsn.TsnDevice;


module TsnController
{
    parameters:
        @display("i=block/control;bgb=302,247");
        int numUserInterfaces = default(0);  
        int numNetworkInterfaces = default(0);
        
    gates:
        inout userInterface[numUserInterfaces];
        inout networkInterface[numNetworkInterfaces];
        
    submodules:
        cuc: CentralUserConfig {
            @display("i=block/process;p=151,66;is=l");
        }

        cnc: CentralNetworkConfig {
            @display("i=block/process;p=151,162;is=l");
        }

    connections:
        for i=0..numUserInterfaces-1 {
            tsnController.userInterface[i] --> cuc.internalCUCInterface++;
            app[i].socketIn <-- sc.out++;
        }
}
