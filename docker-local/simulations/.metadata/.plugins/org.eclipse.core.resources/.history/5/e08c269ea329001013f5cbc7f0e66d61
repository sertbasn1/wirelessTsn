//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

package inet.configurator;
import inet.node.ethernet.EthernetLink;
import inet.node.tsn.TsnDevice;


module TsnController
{
    parameters:
        @display("i=block/control;bgb=302,247");
        int numUserInterfaces = default(2);  
        int numNetworkInterfaces = default(3);
        
    gates:
        inout controllerUserInterface[numUserInterfaces+1];
        inout controllerNetworkInterface[numNetworkInterfaces+1];
        
    submodules:
        cuc: CentralUserConfig {
                @display("i=block/process;p=151,66;is=l");
        }
        
        cnc: CentralNetworkConfig {
                @display("i=block/process;p=151,162;is=l");
        }
        
    connections:
        for i=0..numUserInterfaces-1 {
                controllerUserInterface[i] <--> cuc.internalCUCInterface[i];
        }
        
        for i=0..numNetworkInterfaces-1 {
                controllerNetworkInterface[i] <--> cnc.internalCNCInterface[i];
        }
        
        cuc.internalCUCInterface[numUserInterfaces+1] <--> EthernetLink <-->  cnc.internalCNCInterface[numNetworkInterfaces+1];
 
}
